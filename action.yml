name: "PackBumpPR"
description: "Automatically bump package versions and create pull requests."
author: "HichemTab-tech"
branding:
  icon: "package"
  color: "green"

inputs:
  version_increment:
    description: "Version increment type (patch, minor, major, or custom)"
    required: true
    default: "patch"
  custom_version:
    description: "Custom version (only if version_increment is custom)"
    required: false
  github_token:
    description: "GitHub token for authentication"
    required: true
  main_branche:
    description: "Main branche name (for example: main)"
    required: true

outputs:
  pr_url:
    description: "URL of the created pull request"

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.x'

    - name: Initialize Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
      shell: bash

    - name: Increment or Set Version
      run: |
        CURRENT_VERSION=$(jq -r '.version' package.json)
        if [[ "${{ inputs.version_increment }}" == "custom" && -n "${{ inputs.custom_version }}" ]]; then
          NEW_VERSION="${{ inputs.custom_version }}"
        else
          NEW_VERSION=$(npx semver $CURRENT_VERSION -i ${{ inputs.version_increment }})
        fi
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

        git checkout -b version-bump-$NEW_VERSION

        jq ".version=\"$NEW_VERSION\"" package.json > temp.json && mv temp.json package.json
        jq ".version=\"$NEW_VERSION\"" package-lock.json > temp-lock.json && mv temp-lock.json package-lock.json
      shell: bash

    - name: Commit Changes
      run: |
        git add package.json package-lock.json
        git commit -m "Bump version to ${{ env.new_version }}"
      shell: bash

    - name: Push Changes
      run: |
        git push -u origin version-bump-${{ env.new_version }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Create Pull Request
      run: |
        PR_RESPONSE=$(curl -X POST \
          -H "Authorization: Bearer ${{ inputs.github_token }}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ github.repository }}/pulls \
          -d @- <<EOF
        {
          "title": "Bump version to ${{ env.new_version }}",
          "body": "This PR updates the version to ${{ env.new_version }} in \`package.json\` and \`package-lock.json\`.",
          "head": "version-bump-${{ env.new_version }}",
          "base": "${{ inputs.main_branche }}"
        }
        EOF
        )
        echo "pr_url=$(echo $PR_RESPONSE | jq -r '.html_url')" >> $GITHUB_OUTPUT
      shell: bash
  example:
  - name: Dispatchable Version Bump
    on:
      workflow_dispatch:
        inputs:
          version_increment:
            description: "Version increment type (patch, minor, major, or custom)"
            required: true
            default: "patch"
          custom_version:
            description: "Custom version (only if version_increment is custom)"
            required: false
    jobs:
      bump-version:
        runs-on: ubuntu-latest
        steps:
          - name: Use PackBumpPR
            uses: HichemTab-tech/PackBumpPR@v1
            with:
              version_increment: ${{ github.event.inputs.version_increment }}
              custom_version: ${{ github.event.inputs.custom_version }}
              github_token: ${{ secrets.GITHUB_TOKEN }}
              main_branche: "main"
